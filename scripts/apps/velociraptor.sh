#!/bin/bash
#Reference https://github.com/Velocidex/velociraptor and https://github.com/weslambert/velocistack

# Exit immediately if a command exits with a non-zero status
set -e

source "./libs/main.sh"
define_env
define_paths
source "./libs/install-helper.sh"

# Step 1: Pre-installation
pre_install "velociraptor" false

# Step 2: prepare an environment settings
rsync -a "${src_dir}/docker-compose.yaml" .
rsync -a "${src_dir}/entrypoint" .
rsync -a "${src_dir}/Dockerfile" .
rsync -a "${src_dir}/.env" .

# Grab variables from the default.env file and add them to the .env file to use int he docker-compose
replace_env "VELOX_PASSWORD"
replace_env "VELOX_ROLE"
replace_env "VELOX_USER"

replace_env "VELOX_FRONTEND_HOSTNAME"
replace_env "VELOX_SERVER_URL"
replace_env "VELOX_PUBLIC_IP"

replace_env "VELOX_PASSWORD_2"
replace_env "VELOX_ROLE_2"
replace_env "VELOX_USER_2"
replace_env "VELOX_USER_2"
replace_env "VELOCIRAPTOR_VERSION"


mkdir -p "${workdir}/${service_name}/velociraptor"
sudo chmod 755 -R "${workdir}/${service_name}/velociraptor"
docker compose up -d --build
print_yellow "Waiting for the $service_name service to start..."
sleep 5
docker compose stop

# Step 3: Update permissions and add custom resources
sudo rsync -a "${src_dir}/custom" .
print_yellow "Add custom resources and restarting the $service_name service..."

# Step 3.1: Add custom artifacts
cd "${workdir}/${service_name}"
if [[ -v VELOCIRAPTOR_ARTIFACTS_URL ]]; then
  download_external_file "$VELOCIRAPTOR_ARTIFACTS_URL" velociraptor_artifacts.zip
  unzip -q -o velociraptor_artifacts.zip -d server_artifacts
  # Sync the dir in the server_artifacts/<DIR>/* to the velociraptor/server_artifacts
  sudo chown -R root:root server_artifacts/*
  sudo rsync -r server_artifacts/* "$VELOCIRAPTOR_ARTIFACTS_DST_FOLDER"
  sudo rm -rf server_artifacts
  sudo rm -rf velociraptor_artifacts.zip
fi

if [ -d custom ]; then
  echo "Using custom artifacts"
  sudo mv custom/* "$VELOCIRAPTOR_ARTIFACTS_DST_FOLDER"
  sudo rm -rf custom
  sudo chown -R root:root "$VELOCIRAPTOR_ARTIFACTS_DST_FOLDER"
else
  echo "Artifacts not found, using entrypoint artifacts"
fi

# Step 4: Finally restart the service
docker compose restart
print_green_v2 "$service_name deployment started." "Successfully"

# Step 5: Show login credentials
_VELOX_USER=$(get_env_value 'VELOX_USER')
_VELOX_PASSWORD=$(get_env_value 'VELOX_PASSWORD')
print_with_border "$service_name credentials:"
echo "Username: $_VELOX_USER"
echo "Password: $_VELOX_PASSWORD"

# If the VELOX_USER is not defined in the global .env, then add creds to the .env file
if [[ -z $VELOX_USER ]]; then
  msg1="### Generated by $service_name scripts ###"
  msg2="### $service_name end ###"
  # Remove the existing credentials
  sed -i "/$msg1/,/$msg2/d" "${workdir}/.env"
  print_green "$service_name credentials added to the .env file"

  echo "$msg1" >>"${workdir}/.env"
  echo "VELOCIRAPTOR_USERNAME=$_VELOX_USER" >>"${workdir}/.env"
  echo "VELOCIRAPTOR_PASSWORD=$_VELOX_PASSWORD" >>"${workdir}/.env"
  echo "$msg2" >>"${workdir}/.env"
fi
